<!DOCTYPE html>
<html>
<head>
	<title>Chat</title>
	<link rel="stylesheet" type="text/css" href="/css/bootstrap.css">
	<style>
		body{
				background-image: url('/images/chat_bg.jpg');
				background-repeat: no-repeat;
				background-attachment: fixed;
				background-size: 100% 100%;
		}
		.messageBox{
			margin-top: 30px ;
			width: 600px ;
			height: 600px;
		}
		.messages{
			height: 400px ;
			border:1px solid grey ;
			margin:50px 0px 50px 0px;
			overflow:auto;
			padding: 20px ;
		}
		.message{
			padding: 10px ;
			border-radius: 5px ;
			color:white ;
		}
		.left{
			background-color: rgba(50,100,150,0.4) ;
		}
		.right{
			background-color: rgba(50,100,100,0.4) ;
			text-align: right;
		}
		.btn{
			margin-left: 40%;
		}
		#typing{
			float: left;
			display: none ;
			color: white ;
			background-color: rgba(221, 177, 159,0.7);
			padding: 10px;
			border-radius: 4px ;
			margin-top:4px ;
		}
	</style>
</head>
<body>
	<div class="container messageBox">
		<div class="messages">
			<%if(chat.messages.length){%>
				<%for(var i=0;i<chat.messages.length;i++){%>
					<%if(chat.messages[i].author === host){%>
						<p class="message right"><strong><%= chat.messages[i].author %> :</strong><%= chat.messages[i].message %></p>
					<%}else{%>
						<p class="message left"><strong><%= chat.messages[i].author %> :</strong><%= chat.messages[i].message %></p>
					<%}%>
				<%}%>
			<%}%>
		</div>
		<div class="add_message">
			<input type="text" host="<%= host %>" target="<%= guest %>" placeholder="Enter message here!" id="message" class="form-control"><span  id="typing">TYPING</span>
		</div>
		<br />
		<div class="btn btn-success" id="send" host="<%= host %>" target="<%= guest %>">Send</div>
	</div>
	<% include footer.ejs %>
</body>

<script src="/socket.io/socket.io.js"></script>
<script src="/javascripts/jquery.min.js"></script>
<script>
    $(document).ready(function(){
			var socket = io('localhost:3000') ;
			$('#send').click(function(e){
				var p = document.createElement('p') ;
				p.innerHTML ='<strong>' + e.target.getAttribute('host')+ '</strong> : ' + $('#message').val() ;
				p.setAttribute('class','message right') ;
				document.querySelector('.messages').appendChild(p) ;
				socket.emit('private message', {
					message: $('#message').val(),
					source: e.target.getAttribute('host'),
					target: e.target.getAttribute('target')
				})
				$('#message').val('') ;
			})

			socket.on('private message from_server', function(data){
				var source = data.source ;
				var target = data.target ;
				var message = data.message ;
				var p = document.createElement('p') ;
				p.innerHTML = '<strong>'+source+'</strong> : '+ message;
				p.setAttribute('class', 'message left') ;
				document.querySelector('.messages').appendChild(p) ;
			})
			var typing = false;
			var timeout = undefined;
			var message = document.getElementById('message') ;
			message.onkeyup = function(e){
				if(e.keyCode == 13){
					var p = document.createElement('p') ;
					p.innerHTML ='<strong>' + e.target.getAttribute('host')+ '</strong> : ' + $('#message').val() ;
					p.setAttribute('class','message right') ;
					document.querySelector('.messages').appendChild(p) ;
					socket.emit('private message', {
						message: $('#message').val(),
						source: e.target.getAttribute('host'),
						target: e.target.getAttribute('target')
					})
					$('#message').val('') ;
				}else{
					if(typing == false){
						user_typing = true ;
						socket.emit('typing',{
							typing:true,
							source: e.target.getAttribute('host'),
							target: e.target.getAttribute('target')
						});
						timeout = setTimeout(timeoutFunctionForTyping, 5000);
					}else{
						clearTimeout(timeout) ;
						timeout = setTimeout(timeoutFunctionForTyping, 5000) ;
					}
				}
				function timeoutFunctionForTyping(){
					typing = false ;
					socket.emit('not typing',{
						typing:false,
						source: e.target.getAttribute('host'),
						target: e.target.getAttribute('target')
					})
				}
			}
			var hide_typing_status = undefined;
			socket.on('typing echo', function(data){
				console.log(data)
				if(data.typing){
					var typing = document.getElementById('typing') ;
					typing.style.display = 'inline-block' ;
					if(hide_typing_status){
						clearTimeout(hide_typing_status) ;
						hide_typing_status = setTimeout(function(){
							typing.style.display = 'none' ;
						},5000)
					}else{
						hide_typing_status = setTimeout(function(){
							typing.style.display = 'none' ;
						},5000)
					}
				}
			})
		  /*socket.on('not typing echo1', function(data){
			  	console.log(data,2) ;
			  })
			*/
		})

</script>
</html>
